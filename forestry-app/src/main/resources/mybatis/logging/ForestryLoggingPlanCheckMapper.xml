<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.forest.dao.logging.ForestryLoggingPlanCheckMapper">
  <resultMap id="BaseResultMap" type="com.forest.entity.logging.ForestryLoggingPlanCheck">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="created_at" jdbcType="VARCHAR" property="createdAt" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="updated_by" jdbcType="TIMESTAMP" property="updatedBy" />
    <result column="plan_id" jdbcType="INTEGER" property="planId" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="is_valid" jdbcType="VARCHAR" property="isValid" />
    <result column="version" jdbcType="VARCHAR" property="version" />
  </resultMap>
  <sql id="Base_Column_List">
    id, created_at, created_by, updated_at, updated_by, plan_id, status, remark, is_valid, 
    version
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from forestry_logging_plan_check
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from forestry_logging_plan_check
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.forest.entity.logging.ForestryLoggingPlanCheck">
    insert into forestry_logging_plan_check (id, created_at, created_by, 
      updated_at, updated_by, plan_id, 
      status, remark, is_valid, 
      version)
    values (#{id,jdbcType=INTEGER}, #{createdAt,jdbcType=VARCHAR}, #{createdBy,jdbcType=VARCHAR}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=TIMESTAMP}, #{planId,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{isValid,jdbcType=VARCHAR}, 
      #{version,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.forest.entity.logging.ForestryLoggingPlanCheck">
    insert into forestry_logging_plan_check
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="planId != null">
        plan_id,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="version != null">
        version,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=TIMESTAMP},
      </if>
      <if test="planId != null">
        #{planId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.forest.entity.logging.ForestryLoggingPlanCheck">
    update forestry_logging_plan_check
    <set>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=VARCHAR},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=TIMESTAMP},
      </if>
      <if test="planId != null">
        plan_id = #{planId,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.forest.entity.logging.ForestryLoggingPlanCheck">
    update forestry_logging_plan_check
    set created_at = #{createdAt,jdbcType=VARCHAR},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=TIMESTAMP},
      plan_id = #{planId,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
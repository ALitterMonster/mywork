<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.forest.dao.logging.ForestryLoggingRecordMapper">
  <resultMap id="BaseLogMap" type="com.forest.entity.logging.ForestryLoggingRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="created_by" jdbcType="VARCHAR" property="createdBy" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
    <result column="updated_by" jdbcType="VARCHAR" property="updatedBy" />
    <result column="version" jdbcType="VARCHAR" property="version" />
    <result column="area" jdbcType="VARCHAR" property="area" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="amout" jdbcType="INTEGER" property="amout" />
    <result column="is_legal" jdbcType="VARCHAR" property="isLegal" />
    <result column="plan_id" jdbcType="VARCHAR" property="planId" />
    <result column="is_valid" jdbcType="VARCHAR" property="isValid" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, created_at, created_by, updated_at, updated_by, version, area, reason,  amout, 
    is_legal, plan_id, is_valid, remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseLogMap">
    select 
    <include refid="Base_Column_List" />
    from forestry_logging_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  
   <select id="getLoggingRecordCount" parameterType="java.util.Map" resultType="java.lang.Integer">
    select 
    count(*)
    from forestry_logging_record
    where 1=1
     <if test="startAt != null">
     and   created_at > #{startAt,jdbcType=TIMESTAMP}
      </if>
      <if test="endAt != null">
      and  created_at &lt;= #{endAt,jdbcType=TIMESTAMP}
      </if>
      <if test="createdBy != null">
      and  created_by like CONCAT('%', #{createdBy,jdbcType=VARCHAR},'%')
      </if>
      <if test="updatedAt != null">
      and  updated_at = #{updatedAt,jdbcType=TIMESTAMP}
      </if>
      <if test="updatedBy != null">
      and  updated_by = #{updatedBy,jdbcType=VARCHAR}
      </if>
      <if test="area != null">
      and  area = #{area,jdbcType=VARCHAR}
      </if>
      <if test="reason != null">
      and  reason = #{reason,jdbcType=VARCHAR}
      </if>
      <if test="amout != null">
      and  amout = #{amout,jdbcType=INTEGER}
      </if>
      <if test="isLegal != null">
      and  is_legal = #{isLegal,jdbcType=VARCHAR}
      </if>
      <if test="planId != null">
       and plan_id = #{planId,jdbcType=VARCHAR}
      </if>
      <if test="isValid != null">
       and is_valid = #{isValid,jdbcType=VARCHAR}
      </if>
      <if test="remark != null">
       and remark = #{remark,jdbcType=VARCHAR}
      </if>
  </select>
  <select id="queryRecordListPage" parameterType="java.util.Map" resultMap="BaseLogMap">
    select 
     <include refid="Base_Column_List" />
    from forestry_logging_record
    where 1=1
     <if test="startAt != null">
      and   created_at > #{startAt,jdbcType=TIMESTAMP}
      </if>
      <if test="endAt != null">
      and  created_at &lt;= #{endAt,jdbcType=TIMESTAMP}
      </if>
      <if test="createdBy != null">
      and  created_by  like CONCAT('%', #{createdBy,jdbcType=VARCHAR},'%')
      </if>
      <if test="updatedAt != null">
      and  updated_at = #{updatedAt,jdbcType=TIMESTAMP}
      </if>
      <if test="updatedBy != null">
      and  updated_by = #{updatedBy,jdbcType=VARCHAR}
      </if>
      <if test="area != null">
      and  area = #{area,jdbcType=VARCHAR}
      </if>
      <if test="reason != null">
      and  reason = #{reason,jdbcType=VARCHAR}
      </if>
      <if test="amout != null">
       and amout = #{amout,jdbcType=INTEGER}
      </if>
      <if test="isLegal != null">
       and is_legal = #{isLegal,jdbcType=VARCHAR}
      </if>
      <if test="planId != null">
      and  plan_id = #{planId,jdbcType=VARCHAR}
      </if>
      <if test="isValid != null">
      and  is_valid = #{isValid,jdbcType=VARCHAR}
      </if>
      <if test="remark != null">
      and  remark = #{remark,jdbcType=VARCHAR}
      </if>
       limit #{pageIndex,jdbcType=INTEGER} ,#{pageSize,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from forestry_logging_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.forest.entity.logging.ForestryLoggingRecord">
  <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
    	SELECT LAST_INSERT_ID() AS id
    </selectKey>
    insert into forestry_logging_record (id, created_at, created_by, 
      updated_at, updated_by, version, 
      area, reason,
      amout, is_legal, plan_id, 
      is_valid, remark)
    values (#{id,jdbcType=INTEGER}, #{createdAt,jdbcType=TIMESTAMP}, #{createdBy,jdbcType=VARCHAR}, 
      #{updatedAt,jdbcType=TIMESTAMP}, #{updatedBy,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, 
      #{area,jdbcType=VARCHAR}, #{reason,jdbcType=VARCHAR}, 
      #{amout,jdbcType=INTEGER}, #{isLegal,jdbcType=VARCHAR}, #{planId,jdbcType=VARCHAR}, 
      #{isValid,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.forest.entity.logging.ForestryLoggingRecord">
    insert into forestry_logging_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="version != null">
        version,
      </if>
      <if test="area != null">
        area,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="amout != null">
        amout,
      </if>
      <if test="isLegal != null">
        is_legal,
      </if>
      <if test="planId != null">
        plan_id,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        #{area,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="amout != null">
        #{amout,jdbcType=INTEGER},
      </if>
      <if test="isLegal != null">
        #{isLegal,jdbcType=VARCHAR},
      </if>
      <if test="planId != null">
        #{planId,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.forest.entity.logging.ForestryLoggingRecord">
    update forestry_logging_record
    <set>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=VARCHAR},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=VARCHAR},
      </if>
      <if test="version != null">
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="area != null">
        area = #{area,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="amout != null">
        amout = #{amout,jdbcType=INTEGER},
      </if>
      <if test="isLegal != null">
        is_legal = #{isLegal,jdbcType=VARCHAR},
      </if>
      <if test="planId != null">
        plan_id = #{planId,jdbcType=VARCHAR},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.forest.entity.logging.ForestryLoggingRecord">
    update forestry_logging_record
    set created_at = #{createdAt,jdbcType=TIMESTAMP},
      created_by = #{createdBy,jdbcType=VARCHAR},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      updated_by = #{updatedBy,jdbcType=VARCHAR},
      version = #{version,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      amout = #{amout,jdbcType=INTEGER},
      is_legal = #{isLegal,jdbcType=VARCHAR},
      plan_id = #{planId,jdbcType=VARCHAR},
      is_valid = #{isValid,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>